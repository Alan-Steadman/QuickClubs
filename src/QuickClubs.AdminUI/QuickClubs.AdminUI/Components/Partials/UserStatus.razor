@inject IAuthenticationService AuthenticationService;
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navManager
@using QuickClubs.AdminUI.Authentication
@using System.Security.Claims
@rendermode InteractiveServer

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            @_userDetails?.FullName
            <a @onclick="Logout" href="javascript:void(0)">Sign out</a>
        </Authorized>
        <NotAuthorized>
            <a @onclick="Login" href="javascript:void(0)">Sign in...</a>
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>
@code {
    private UserDetailsFromClaims? _userDetails;

    protected override async Task OnParametersSetAsync()
    {
        _userDetails = await ((AppAuthenticationStateProvider)authenticationStateProvider).GetUserDetailsFromClaimsAsync();
    }

    private async void Logout()
    {
        await AuthenticationService.LogoutAsync();
        navManager.NavigateTo("/", true);
    }

    private async void Login()
    {
        await Task.CompletedTask;
        navManager.NavigateTo("/auth/sign-in");
    }
}
