@page "/clubs/{Id}"
@using QuickClubs.AdminUI.Services
@using QuickClubs.Contracts.Clubs
@inject IClubService clubService
@inject NotFoundListener nfl
@rendermode InteractiveServer

@if (club is not null)
{
    <PageTitle>@club.FullName</PageTitle>
    <h1>@club.FullName</h1>
    <div>@club.Acronym</div>
    <div>@club.ClubType</div>
    <div>
        <a href="@club.Website" target="_blank">@club.Website</a>
    </div>
    <div>
        @if(club.IsAffiliate)
        {
            <div>
                Is Affiliate
            </div>
        }
        else
        {
            <div>
                Not Affiliated <button>Set Affiliated</button>
            </div>
        }
    </div>
}
else
{
    <div>wtf?</div>
}

@code {
    [Parameter]
    public string? Id { get; set; }

    private ClubResponse? club;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await GetClub();
        }
    }

    private async Task GetClub()
    {
        Guid MyId = Guid.Parse(Id);

        var result = await clubService.GetClub(MyId);

        if (result is null)
            nfl.NotifyNotFound();

        club = result;
        StateHasChanged();
    }
}
