@page "/clubs"
@using QuickClubs.AdminUI.Services
@using QuickClubs.Contracts.Clubs
@inject IClubService clubService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@using QuickClubs.Contracts.Constants.Storage;
@inject ProtectedSessionStorage _sessionStorage


<PageTitle>Clubs</PageTitle>
<h1>Clubs</h1>

<div>
    Token: @token
</div>

<div class="btn-toolbar">
    <button @onclick="CreateClub" class="btn btn-primary me-2">Create Club</button>
    <button @onclick="GetToken" class="btn btn-outline-primary me-2 ">Get Token</button>
    <button @onclick="ListClubs" class="btn btn-outline-primary me-2 ">List Clubs</button>
</div>


<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Acronym</th>
            <th>Website</th>
            <th>Affiliate</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var club in clubs)
        {
            <tr @onclick="(() => ViewClub(club.Id))" class="@club.Id">
                <td>@club.FullName</td>
                <td>@club.Acronym</td>
                <td>@club.Website</td>
                <td>@club.IsAffiliate</td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<ClubResponse> clubs = new();

    private string token = "initial value...";

    private async Task GetToken()
    {
        var savedTokenResult = await _sessionStorage.GetAsync<string>(StorageConstants.Local.AuthToken);
        token = savedTokenResult.Success ? savedTokenResult.Value! : "fk";
        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await ListClubs();
        }
    }

    private async Task ListClubs()
    {
        var result = await clubService.GetAllClubs();

        if (result is not null)
        {
            clubs = result.ToList();
            StateHasChanged();
        }
    }

    public void ViewClub(Guid id)
    {
        navigationManager.NavigateTo($"/clubs/{id}");
    }

    public void CreateClub()
    {
        navigationManager.NavigateTo("/clubs/create");
    }
}
