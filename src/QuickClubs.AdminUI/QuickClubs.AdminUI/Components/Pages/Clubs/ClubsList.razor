@page "/clubs"
@using QuickClubs.AdminUI.Services
@using QuickClubs.Contracts.Clubs
@inject IClubService clubService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Clubs</PageTitle>
<h1>Clubs</h1>

<div class="btn-toolbar mb-3">
    <button @onclick="CreateClub" class="btn btn-primary me-2">Create Club</button>
    <button @onclick="ListClubs" class="btn btn-outline-primary me-2 ">List Clubs</button>
</div>

<div class="card">
    <div class="card-body p-0">

        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Club Type</th>
                    <th>Club Name</th>
                    <th>Acronym</th>
                    <th>Website</th>
                    <th>Affiliate</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var club in clubs)
                {
                    <tr @onclick="(() => ViewClub(club.Id))" class="clickable" >
                        <td>@club.ClubType</td>
                        <td>@club.FullName</td>
                        <td>@club.Acronym</td>
                        <td>@club.Website</td>
                        <td>@club.IsAffiliate</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private List<ClubResponse> clubs = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await ListClubs();
        }
    }

    private async Task ListClubs()
    {
        var result = await clubService.GetAllClubs();

        if (result is not null)
        {
            clubs = result.ToList();
            StateHasChanged();
        }
    }

    public void ViewClub(Guid id)
    {
        navigationManager.NavigateTo($"/clubs/{id}");
    }

    public void CreateClub()
    {
        navigationManager.NavigateTo("/clubs/create");
    }
}
