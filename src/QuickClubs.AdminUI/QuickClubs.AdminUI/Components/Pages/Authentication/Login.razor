@page "/auth/login"
@using QuickClubs.Contracts.Authentication
@inject IAuthenticationService _authenticationService
@inject NavigationManager navManager
@rendermode InteractiveServer

<PageTitle>Login</PageTitle>
<h1>Login</h1>

<fieldset>
    <legend>Login</legend>
    <EditForm Model="@login" OnValidSubmit="SubmitAsync" FormName="Login">
        <div class="mb-3">
            <label for="email">Email</label>
            <InputText id="email" @bind-Value="login!.Email" type="email" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="password">Password</label>
            <InputText id="password" @bind-Value="login!.Password" type="password" class="form-control" />
        </div>
        <div class="mb-3">
            <button class="btn btn-primary" type="submit">Login</button>
        </div>
    </EditForm>
    <div class=" mb-3">
        @errorMessage
    </div>
</fieldset>

@code {
    [SupplyParameterFromForm]
    public LoginRequest? login { get; set; } = new();

    private string? errorMessage;

    public async Task SubmitAsync()
    {
        try
        {
            var authResponse = await _authenticationService.LoginAsync(login!);
            errorMessage = null;
            navManager.NavigateTo("/", true);
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

}
